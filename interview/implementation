  mix archive.install hex phx_new
  mix phx.new demo --live
  mix phx.gen.cert
  mix deps.get

$ docker volume create pgdata
pgdata

$  docker run -dp 5432:5432 --name postgres -v pgdata:/var/lib/postgresql/data -e POSTGRES_PASSWORD=postgres postgres
95b54702067f8a58cbae0ea9de866c23c071cc601f77eaf3eaae2caa77156e92

steph@DESKTOP-71BV78O MINGW64 ~/Code/liveview/demo (main)
$ docker logs postgres

PostgreSQL Database directory appears to contain a database; Skipping initialization

2021-02-28 12:05:29.884 UTC [1] LOG:  starting PostgreSQL 13.2 (Debian 13.2-1.pgdg100+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 8.3.0-6) 8.3.0, 64-bit
2021-02-28 12:05:29.967 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
2021-02-28 12:05:30.106 UTC [1] LOG:  listening on IPv6 address "::", port 5432
2021-02-28 12:05:30.386 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2021-02-28 12:05:31.102 UTC [26] LOG:  database system was interrupted; last known up at 2021-02-28 12:02:54 UTC

steph@DESKTOP-71BV78O MINGW64 ~/Code/liveview/demo (main)
$ docker logs postgres

PostgreSQL Database directory appears to contain a database; Skipping initialization

2021-02-28 12:05:29.884 UTC [1] LOG:  starting PostgreSQL 13.2 (Debian 13.2-1.pgdg100+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 8.3.0-6) 8.3.0, 64-bit
2021-02-28 12:05:29.967 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
2021-02-28 12:05:30.106 UTC [1] LOG:  listening on IPv6 address "::", port 5432
2021-02-28 12:05:30.386 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
2021-02-28 12:05:31.102 UTC [26] LOG:  database system was interrupted; last known up at 2021-02-28 12:02:54 UTC
2021-02-28 12:05:41.914 UTC [26] LOG:  database system was not properly shut down; automatic recovery in progress
2021-02-28 12:05:42.048 UTC [26] LOG:  redo starts at 0/15CC940
2021-02-28 12:05:42.052 UTC [26] LOG:  invalid record length at 0/15CCA28: wanted 24, got 0
2021-02-28 12:05:42.052 UTC [26] LOG:  redo done at 0/15CC9F0
2021-02-28 12:05:42.668 UTC [1] LOG:  database system is ready to accept connections

steph@DESKTOP-71BV78O MINGW64 ~/Code/liveview/demo (main)
$ mix test
...

Finished in 2.5 seconds
3 tests, 0 failures

Randomized with seed 204000

===============
There were some issues with node-gyp trying to use Python2, so installed 2.7.18
Wound up having to update sass-loader and node-sass. Maybe the latest node-gyp supported Python3. In any case, for recompiling it seems to use VS build instead of gcc.
===============
Directory watching for updates relies on some symbolic links in assets/node_modules point back up to deps directories. As noted on "mix phx.server" startup on Windows this requires starting the terminal window with "Run as administrator" to work. Otherwise exceptions cause jarring empty updates of the app due to restarts'.
===============
curl -H "Authorization: Bearer $SALESLOFT_APPLICATION_SECRET" https://api.salesloft.com/v2/people.json -O
===============
There are potentially 4 email addresses for each person in the JSON data, but only email_address and full_email_address are consistently filled and the latter may be syntheticly created from display_name and email_address.
===============
try generating code supporting JSON Person data

$ mix phx.gen.json Data People people title:string display_name:string email_address:string
* creating lib/salesloft_web/controllers/people_controller.ex
* creating lib/salesloft_web/views/people_view.ex
* creating test/salesloft_web/controllers/people_controller_test.exs
* creating lib/salesloft_web/views/changeset_view.ex
* creating lib/salesloft_web/controllers/fallback_controller.ex
* creating lib/salesloft/data/people.ex
* creating priv/repo/migrations/20210301055930_create_people.exs
* creating lib/salesloft/data.ex
* injecting lib/salesloft/data.ex
* creating test/salesloft/data_test.exs
* injecting test/salesloft/data_test.exs

Add the resource to your :api scope in lib/salesloft_web/router.ex:

    resources "/people", PeopleController, except: [:new, :edit]


Remember to update your repository by running migrations:

    $ mix ecto.migrate


$ mix ecto.migrate

01:14:14.029 [info]  == Running 20210301055930 Salesloft.Repo.Migrations.CreatePeople.change/0 forward

01:14:14.037 [info]  create table people

01:14:15.218 [info]  == Migrated 20210301055930 in 1.1s

=================
For Level 2
get list of email addresses

iex(4)> Enum.map(Salesloft.Data.list_people, fn(person) -> person.email_address end)
[debug] QUERY OK source="people" db=16.0ms idle=313.0ms
SELECT p0."id", p0."display_name", p0."email_address", p0."title", p0."inserted_at", p0."updated_at" FROM "people" AS p0 []
["sakatius@gmail.com", "sakatius@gmail.com"]




